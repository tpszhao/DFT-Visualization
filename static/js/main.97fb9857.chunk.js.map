{"version":3,"sources":["DraggableContainer.js","DrawingPad.js","Epicycle.js","index.js","App.js"],"names":["DraggableContainer","props","useState","x","y","offset","setOffset","containerStyle","position","zIndex","left","top","draggerRef","useRef","isDragging","stopdrag","e","current","style","ref","display","justifyContent","alignItems","backgroundColor","cursor","Width","padding","onMouseDown","onMouseMove","movementX","movementY","onMouseUp","onMouseLeave","children","DrawingPad","width","height","hide","addpoint","origin","hideStyle","canvasRef","drawMode","isDrawing","prevPos","useEffect","canvas","className","context","getContext","resetTransform","clearRect","translate","currentpoint","getBoundingClientRect","clientX","clientY","lineStart","beginPath","moveTo","lineTo","stroke","prevX","prevY","distX","distY","dist","Math","hypot","steps","max","i","addline","stopdrawing","drawModeChange","str","strokestart","flexDirection","onClick","toggleanimation","Epicycle","path","animate","Idx","setIdx","epicycleRef","traceRef","DFT","forEach","item","DFTcompute","interval","length","setInterval","draw","trace","min","clearInterval","len","idx","previdx","connected","strokeStyle","sequence","a","b","norm","angle","speed","arc","PI","phase","cos","sin","k","re","im","n","phi","size","sqrt","args","atan2","push","sort","ReactDOM","render","setAnimate","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","special","newpath","slice","document","getElementById"],"mappings":"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","file":"static/js/main.97fb9857.chunk.js","sourcesContent":["import React, {useRef,useState} from 'react'\r\n\r\nexport default function DraggableContainer(props) {\r\n    const [offset, setOffset] = useState({x:0,y:0});\r\n    const containerStyle={\r\n        position:'absolute',\r\n        zIndex:props.zIndex,\r\n        left:offset.x,\r\n        top:offset.y};\r\n    const draggerStyle = {\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        backgroundColor:'lightblue',\r\n        cursor:'pointer',\r\n        Width:200,padding:20\r\n    }\r\n    const draggerRef = useRef(null);\r\n    const isDragging = useRef(false);\r\n\r\n    const dragstart = () =>{\r\n        isDragging.current = true;\r\n    }\r\n\r\n    const drag = e=>{\r\n        if(isDragging.current){\r\n            const [x,y] = [e.movementX,e.movementY];\r\n            setOffset({x:offset.x + x,y:offset.y + y});\r\n        }\r\n    }\r\n\r\n    const stopdrag = e=>{\r\n        isDragging.current = false;\r\n    }\r\n    return (<div style={containerStyle}>\r\n                <div ref={draggerRef} style={draggerStyle}\r\n                onMouseDown={dragstart}\r\n                onMouseMove={drag}\r\n                onMouseUp={stopdrag}\r\n                onMouseLeave={stopdrag}>Click Here to Drag</div>\r\n                {props.children}\r\n            </div>\r\n    )\r\n}\r\n","import React, {useRef, useEffect} from 'react';\r\nimport DraggableContainer from './DraggableContainer'\r\n\r\nexport default function DrawingPad(props){\r\n  const {width,height,hide,addpoint} = props;\r\n  const origin = {x:width/2,y:height/2};\r\n\r\n  const hideStyle = {display:hide ?\"none\" : \"\"};\r\n\r\n  const canvasRef = useRef(null);\r\n  const drawMode = useRef(\"stroke\");\r\n  const isDrawing = useRef(false);\r\n  const prevPos = useRef(null);\r\n\r\n  useEffect(()=>{\r\n    const canvas = canvasRef.current;\r\n    canvas.className = props.className;\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const context = canvas.getContext('2d');\r\n    context.resetTransform();\r\n    context.clearRect(0,0,width,height);\r\n    context.translate(origin.x,origin.y);\r\n  },[width,height])\r\n\r\n  const currentpoint = e =>{\r\n    const {top,left} = canvasRef.current.getBoundingClientRect();\r\n    return {x:e.clientX - left - origin.x, y:e.clientY - top - origin.y}\r\n  }\r\n\r\n  const addline = (x,y,prevX,prevY)=>{\r\n    const [distX,distY] = [x-prevX,y-prevY];\r\n    const dist = Math.hypot(distX,distY);\r\n    const steps = Math.max(1,dist/20);\r\n    for (let i = 1; i < steps; i++) {\r\n      const shiftX = i*distX/steps;\r\n      const shiftY = i*distY/steps;\r\n      addpoint(prevX+shiftX,prevY+shiftY,true);    \r\n    }\r\n    addpoint(x,y,true);\r\n  }\r\n\r\n  const lineStart = e =>{\r\n    const {x,y}=currentpoint(e);\r\n    if (prevPos.current == null){\r\n      addpoint(x,y,false);\r\n      prevPos.current = {x,y};\r\n    } else {\r\n      const context = canvasRef.current.getContext('2d');\r\n      context.beginPath();\r\n      context.moveTo(prevPos.current.x,prevPos.current.y);\r\n      context.lineTo(x,y);\r\n      context.stroke();\r\n      addline(x,y,prevPos.current.x,prevPos.current.y);\r\n      drawMode.current == \"segment\"? prevPos.current = null : prevPos.current = {x,y};\r\n    }\r\n  }\r\n\r\n  const strokestart = e => {\r\n    const {x,y} = currentpoint(e);\r\n    addpoint(x,y,false);\r\n    prevPos.current = {x,y};\r\n  }\r\n\r\n  const mousedown = e=> {\r\n    isDrawing.current = true;\r\n    switch(drawMode.current){\r\n      case \"tracing\":\r\n      case \"segment\":\r\n        lineStart(e);\r\n        break;\r\n      case \"stroke\":\r\n        strokestart(e);\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  const stroke = e => {\r\n    const context = canvasRef.current.getContext('2d');\r\n    const {x,y} = currentpoint(e);\r\n    context.beginPath();\r\n    context.moveTo(prevPos.current.x,prevPos.current.y);\r\n    context.lineTo(x,y);\r\n    prevPos.current = {x,y};\r\n    context.stroke();\r\n    addpoint(x,y,true);\r\n  }\r\n\r\n  const mousemove = e=>{\r\n    if(isDrawing.current && drawMode.current != \"segment\"){\r\n      stroke(e);\r\n    }\r\n  }\r\n\r\n  const stopdrawing = e => {\r\n    isDrawing.current = false;\r\n    addpoint(0,0,true,\"new\");\r\n  }\r\n\r\n  const reset = ()=>{\r\n    addpoint(0,0,false,\"reset\");\r\n    const context = canvasRef.current.getContext('2d');\r\n    context.resetTransform();\r\n    context.clearRect(0,0,width,height);\r\n    context.translate(origin.x,origin.y);\r\n    prevPos.current = null;\r\n  }\r\n\r\n  const drawModeChange = str =>{\r\n    drawMode.current = str;\r\n    if (str == \"segment\"){\r\n      prevPos.current = null;\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <canvas ref={canvasRef} style={hideStyle}\r\n        onMouseDown = {mousedown} \r\n        onMouseMove={mousemove} \r\n        onMouseUp = {stopdrawing} \r\n        onMouseLeave = {stopdrawing}/>\r\n      \r\n      <DraggableContainer zIndex={20}>\r\n        <div style={{display:'flex',flexDirection:\"column\"}}>\r\n          <button onClick={props.toggleanimation}>{hide?\"Stop\":\"Start\"} Animation</button>            \r\n          <button onClick={reset} style={hideStyle}>Clear</button>  \r\n          <button onClick={()=>drawModeChange(\"stroke\")} style={hideStyle}>Stroke</button>\r\n          <button onClick={()=>drawModeChange(\"tracing\")} style={hideStyle}>Trace</button>\r\n          <button onClick={()=>drawModeChange(\"segment\")} style={hideStyle}>Segment</button>\r\n        </div>\r\n      </DraggableContainer>\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\n","import React,{useRef, useEffect,useState} from 'react'\r\n\r\nexport default function Epicycle(props) {\r\n  const {path = [],animate=false,width,height} = props;\r\n  const [Idx, setIdx] = useState(0);\r\n\r\n  const epicycleRef = useRef(null);\r\n  const traceRef = useRef(null);\r\n  const origin = {x:width/2,y:height/2};\r\n  const DFT = useRef([]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    [epicycleRef,traceRef].forEach(item=>{\r\n      const canvas = item.current;\r\n      canvas.className = props.className;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const context = canvas.getContext('2d');\r\n      context.resetTransform();\r\n      context.translate(origin.x,origin.y);\r\n      context.clearRect(-origin.x,-origin.y,width,height);\r\n    })\r\n  }, [width,height])\r\n\r\n  useEffect(()=>{\r\n    const context = epicycleRef.current.getContext('2d');\r\n    context.clearRect(-origin.x,-origin.y,width,height);\r\n    DFTcompute();\r\n    setIdx(0);\r\n  },[path])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n      if (animate&&path.length > 0) {\r\n        interval = setInterval(() => {\r\n          draw();\r\n          trace();\r\n          setIdx(Idx => Idx + 1);\r\n        }, Math.min(10000/path.length,50));\r\n      } else {\r\n        clearInterval(interval);\r\n        epicycleRef.current.getContext('2d').clearRect(-origin.x,-origin.y,width,height);\r\n        traceRef.current.getContext('2d').clearRect(-origin.x,-origin.y,width,height);\r\n      }\r\n      return () => clearInterval(interval);\r\n    },[animate,Idx]);\r\n\r\n  const trace = () => {\r\n    const context = traceRef.current.getContext('2d');\r\n    let len = path.length;\r\n    if (len > 1){\r\n      let idx = Idx % len;\r\n      switch(idx > 0){\r\n        case false:\r\n          context.clearRect(-origin.x,-origin.y,width,height);\r\n          break;\r\n        case true:\r\n          let previdx = path[idx].connected? (idx-1)%len : idx\r\n          context.beginPath();\r\n          context.moveTo(path[previdx].x,path[previdx].y);\r\n          context.lineTo(path[idx].x,path[idx].y);\r\n          context.stroke();\r\n          break;\r\n        default:\r\n      }\r\n    } \r\n  }\r\n  \r\n\r\n  const draw = ()=>{\r\n    const context = epicycleRef.current.getContext('2d');\r\n    context.clearRect(-origin.x,-origin.y,width,height);\r\n    context.strokeStyle = '#669999';\r\n    let sequence = DFT.current;\r\n    let len = sequence.length;\r\n    if (len > 1){\r\n      let a = 0;\r\n      let b = 0;\r\n      let {x,y} = path[Idx%len];\r\n      for (var i = 0; i < len; i++){\r\n        let norm = sequence[i].norm/len;\r\n        let angle = sequence[i].angle;\r\n        let speed = sequence[i].speed;\r\n\r\n        context.beginPath();\r\n        context.arc(a,b,norm,0,2*Math.PI);\r\n        context.stroke();\r\n\r\n        context.beginPath();\r\n        context.moveTo(a, b);\r\n        let phase = (2*Math.PI*Idx*speed)/len\r\n        a += norm*Math.cos(angle + phase);\r\n        b += norm*Math.sin(angle + phase);\r\n        context.lineTo(a,b);\r\n        context.stroke();\r\n        if (Math.hypot(x-a,y-b) < 5 && i > 30){break;}\r\n      }\r\n      context.beginPath();\r\n      context.moveTo(a,b);\r\n      context.lineTo(x,y);\r\n      context.stroke();\r\n    }\r\n  }\r\n  const DFTcompute = ()=>{\r\n    let sequence = [];\r\n    let len = path.length;\r\n    for (let k = 0; k<len;k++) {\r\n      let re = 0;\r\n      let im = 0;\r\n      for (let n = 0; n<len;n++){\r\n        const phi = (Math.PI*2*k*n)/len;\r\n          re += path[n].x * Math.cos(phi);\r\n          im -= path[n].x * Math.sin(phi);\r\n\r\n          im += path[n].y * Math.cos(phi);\r\n          re += path[n].y * Math.sin(phi);\r\n      }\r\n      let size = Math.sqrt(re*re+im*im);\r\n      let args = Math.atan2(im,re);\r\n      sequence.push({norm:size,angle:args,speed:k})\r\n    }\r\n    sequence.sort((a,b)=> b.norm - a.norm)\r\n    DFT.current = sequence;\r\n  }\r\n\r\n  return (<>\r\n    <canvas ref = {epicycleRef}/>\r\n    <canvas ref = {traceRef}/>\r\n  </>)\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n","import React,{useRef,useState,useEffect} from 'react';\r\nimport DrawingPad from './DrawingPad';\r\nimport Epicycle from './Epicycle'\r\nimport './App.css';\r\n\r\nfunction useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useEffect(() => {\r\n    function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;}\r\n\r\nexport default function App() {\r\n    const path = useRef([]);\r\n    const [animate, setAnimate] = useState(false);\r\n    const [width,height] = useWindowSize();\r\n\r\n    useEffect(()=>{\r\n        setAnimate(false)\r\n    },[width,height])\r\n    \r\n    const pathAddpoint = (x,y,connected,special=\"none\")=>{\r\n        switch(special){\r\n            case \"reset\":\r\n                path.current = [];\r\n                break;\r\n            case \"new\":\r\n                let newpath = path.current.slice();\r\n                path.current = newpath;\r\n                break;\r\n            default:\r\n                path.current.push({x,y,connected});\r\n                break;\r\n        }\r\n    }\r\n    \r\n    const toggleAnimation = ()=> setAnimate(!animate)\r\n\r\n    return (<>  \r\n                <DrawingPad className=\"top center absolute\" width={width} height={height} \r\n                    addpoint={pathAddpoint} \r\n                    toggleanimation = {toggleAnimation}\r\n                    hide={animate}/>  \r\n                <Epicycle className=\"center absolute\" width={width} height={height}\r\n                    animate={animate} \r\n                    path={path.current}/>        \r\n            </>\r\n    )\r\n}\r\n\r\n"],"sourceRoot":""}