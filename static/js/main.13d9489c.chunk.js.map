{"version":3,"sources":["UI/DraggableContainer.js","components/ImageCanvas.js","UI/StrokeStyleMenu.js","UI/ImageCanvasMenu.js","components/DrawingPad.js","components/Epicycle.js","index.js","components/App.js"],"names":["DraggableContainer","props","useState","x","y","offset","setOffset","containerRef","useRef","containerStyle","position","zIndex","left","top","cursor","border","backgroundColor","padding","isDragging","stopdrag","e","current","ref","style","onMouseDown","target","onMouseMove","movementX","movementY","onMouseUp","onMouseLeave","children","ImageCanvas","width","height","image","hideImage","scale","canvasRef","useEffect","context","getContext","globalAlpha","clearRect","drawImage","className","StrokeStyleMenu","values","onChange","defaultvalue","FormGroup","column","FormLabel","component","color","margin","RadioGroup","name","row","defaultValue","map","value","i","FormControlLabel","label","labelPlacement","control","Radio","ImageCanvasMenu","UploadButton","switchvalue","onswitch","imageChange","toggleHideImage","scaleChange","Switch","checked","Button","variant","onClick","click","Slider","min","max","aria-labelledby","type","accept","display","DrawingPad","hide","addpoint","resetpath","origin","hideStyle","flexitemStyle","drawMode","isDrawing","prevPos","setImage","editImage","setEditImage","setHideImage","imageScale","setImageScale","resetTransform","translate","currentpoint","getBoundingClientRect","clientX","clientY","lineStart","beginPath","moveTo","lineTo","stroke","prevX","prevY","distX","distY","dist","Math","hypot","steps","addline","stopdrawing","strokestart","flexDirection","toggleanimation","val","files","FR","FileReader","onload","img","Image","src","result","readAsDataURL","str","Epicycle","path","animate","Idx","setIdx","epicycleRef","traceRef","DFT","forEach","item","canvas","DFTcompute","interval","length","setInterval","draw","trace","clearInterval","len","idx","previdx","connected","strokeStyle","sequence","a","b","norm","angle","speed","arc","PI","phase","cos","sin","k","re","im","n","phi","size","sqrt","args","atan2","push","sort","ReactDOM","render","pathChanged","setAnimate","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","newpath","slice","document","getElementById"],"mappings":"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","file":"static/js/main.13d9489c.chunk.js","sourcesContent":["import React, {useRef,useState} from 'react'\r\n\r\nexport default function DraggableContainer(props) {\r\n    const [offset, setOffset] = useState({x:0,y:0});\r\n    const containerRef = useRef(null);\r\n    const containerStyle={\r\n        position:'absolute',\r\n        zIndex:props.zIndex,\r\n        left:offset.x,\r\n        top:offset.y, \r\n        cursor:'pointer',\r\n        border:'thick double #3f51b5',\r\n        backgroundColor:'white',\r\n        padding: 30};\r\n    \r\n    const isDragging = useRef(false);\r\n\r\n    const dragstart = e =>{\r\n        if(e.target == containerRef.current)\r\n        isDragging.current = true;\r\n    }\r\n\r\n    const drag = e=>{\r\n        if(isDragging.current){\r\n            const [x,y] = [e.movementX,e.movementY];\r\n            setOffset({x:offset.x + x,y:offset.y + y});\r\n        }\r\n    }\r\n\r\n    const stopdrag = e=>{\r\n        isDragging.current = false;\r\n    }\r\n    return (<div \r\n                ref={containerRef}\r\n                style={containerStyle}\r\n                onMouseDown={dragstart}\r\n                onMouseMove={drag}\r\n                onMouseUp={stopdrag}\r\n                onMouseLeave={stopdrag}>\r\n                {props.children}\r\n            </div>\r\n    )\r\n}\r\n","import React,{useRef,useEffect,useState} from 'react'\r\n\r\nexport default function ImageCanvas(props) {\r\n    const {width,height,image,hideImage,scale=1} = props;\r\n    const [offset, setOffset] = useState({x:0,y:0});\r\n\r\n    const canvasRef = useRef(null);\r\n    const isDragging = useRef(false);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n        context.globalAlpha = 0.8;\r\n        context.clearRect(0,0,width,height);\r\n        if(image != null && !hideImage){\r\n            context.drawImage(image,offset.x,offset.y,image.width*scale,image.height*scale)\r\n        }\r\n    }, [image,width,height,hideImage,scale,offset]);\r\n\r\n    const dragstart = () =>{\r\n        isDragging.current = true;\r\n    }\r\n\r\n    const drag = e=>{\r\n        if(isDragging.current){\r\n            const [x,y] = [e.movementX,e.movementY];\r\n            setOffset({x:offset.x + x,y:offset.y + y});\r\n        }\r\n    }\r\n\r\n    const stopdrag = e=>{\r\n        isDragging.current = false;\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <canvas\r\n            ref={canvasRef} \r\n            style={{position:'absolute',...props.style}}\r\n            className={props.className} \r\n            width={width} \r\n            height={height}\r\n            onMouseDown={dragstart}\r\n            onMouseMove={drag}\r\n            onMouseUp={stopdrag}\r\n            onMouseLeave={stopdrag}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nexport default function StrokeStyleMenu(props) {\r\n    const {values,onChange,defaultvalue} = props;\r\n    return (<FormGroup column>\r\n                <FormLabel \r\n                    component=\"legend\" \r\n                    style={{color:'black',margin:5}}>Stroke Style</FormLabel>\r\n                <RadioGroup name=\"StrokeStyle\" onChange={onChange} row\r\n                    defaultValue={defaultvalue.current}>\r\n                    {values.map((value,i)=>{\r\n                        return (<FormControlLabel \r\n                                    value={value} \r\n                                    label={value} \r\n                                    labelPlacement=\"end\" \r\n                                    control={<Radio color=\"primary\"/>}/>)\r\n                    })}\r\n                </RadioGroup>\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {useRef} from 'react'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\n\r\nexport default function ImageCanvasMenu(props) {\r\n    const UploadButton = useRef(null);\r\n    const {switchvalue, onswitch,imageChange} = props;\r\n    const {hideImage, toggleHideImage} = props;\r\n    const {scale,scaleChange} = props;\r\n\r\n    return (\r\n        <FormGroup column>\r\n            <FormLabel \r\n                component=\"legend\" \r\n                style={{color:'black',margin:5}}>Reference Image</FormLabel>\r\n            <FormGroup row>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch checked={switchvalue} onChange={onswitch} color=\"primary\"/>\r\n                    }\r\n                    label=\"Drag Image\"/>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch checked={hideImage} onChange={toggleHideImage} color=\"primary\"/>\r\n                    }\r\n                    label=\"Hide Image\"/>\r\n            </FormGroup>\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\"\r\n                onClick={()=>{UploadButton.current.click()}}>Upload Image</Button>\r\n\r\n            <FormLabel \r\n                component=\"legend\" \r\n                style={{color:'black',margin:5}}>Image Scale</FormLabel>\r\n\r\n            <Slider\r\n                value={scale}\r\n                onChange={scaleChange}\r\n                min = {0}\r\n                max = {200}\r\n                aria-labelledby=\"input-slider\"/>\r\n            \r\n            <input \r\n                ref={UploadButton}\r\n                type=\"file\" \r\n                accept=\"image/*\" \r\n                onChange={imageChange}\r\n                style={{display:'none'}}/>\r\n        </FormGroup>\r\n    )\r\n}\r\n","import React, {useRef, useEffect,useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DraggableContainer from '../UI/DraggableContainer'\r\nimport ImageCanvas from './ImageCanvas';\r\nimport StrokeStyleMenu from '../UI/StrokeStyleMenu';\r\nimport ImageCanvasMenu from '../UI/ImageCanvasMenu';\r\n\r\n\r\nexport default function DrawingPad(props){\r\n  const {width,height,hide,addpoint,resetpath} = props;\r\n  const origin = {x:width/2,y:height/2};\r\n\r\n  const hideStyle = {display:hide ?\"none\" : \"\"};\r\n  const flexitemStyle = {margin:5}\r\n\r\n  const canvasRef = useRef(null);\r\n  const drawMode = useRef(\"stroke\");\r\n  const isDrawing = useRef(false);\r\n  const prevPos = useRef(null);\r\n\r\n  const [image, setImage] = useState(null);\r\n  const [editImage, setEditImage] = useState(false);\r\n  const [hideImage, setHideImage] = useState(false);\r\n  const [imageScale, setImageScale] = useState(100);\r\n\r\n  useEffect(()=>{\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    context.resetTransform();\r\n    context.clearRect(0,0,width,height);\r\n    context.translate(origin.x,origin.y);\r\n    drawMode.current = \"stroke\"\r\n  },[width,height])\r\n\r\n  const currentpoint = e =>{\r\n    const {top,left} = canvasRef.current.getBoundingClientRect();\r\n    return {x:e.clientX - left - origin.x, y:e.clientY - top - origin.y}\r\n  }\r\n\r\n  const addline = (x,y,prevX,prevY)=>{\r\n    const [distX,distY] = [x-prevX,y-prevY];\r\n    const dist = Math.hypot(distX,distY);\r\n    const steps = Math.max(1,dist/20);\r\n    for (let i = 1; i < steps; i++) {\r\n      const shiftX = i*distX/steps;\r\n      const shiftY = i*distY/steps;\r\n      addpoint(prevX+shiftX,prevY+shiftY,true);    \r\n    }\r\n    addpoint(x,y,true);\r\n  }\r\n\r\n  const lineStart = e =>{\r\n    const {x,y}=currentpoint(e);\r\n    if (prevPos.current == null){\r\n      addpoint(x,y,false);\r\n      prevPos.current = {x,y};\r\n    } else {\r\n      const context = canvasRef.current.getContext('2d');\r\n      context.beginPath();\r\n      context.moveTo(prevPos.current.x,prevPos.current.y);\r\n      context.lineTo(x,y);\r\n      context.stroke();\r\n      addline(x,y,prevPos.current.x,prevPos.current.y);\r\n      drawMode.current == \"segment\"? prevPos.current = null : prevPos.current = {x,y};\r\n    }\r\n  }\r\n\r\n  const strokestart = e => {\r\n    const {x,y} = currentpoint(e);\r\n    addpoint(x,y,false);\r\n    prevPos.current = {x,y};\r\n  }\r\n\r\n  const mousedown = e=> {\r\n    isDrawing.current = true;\r\n    switch(drawMode.current){\r\n      case \"tracing\":\r\n      case \"segment\":\r\n        lineStart(e);\r\n        break;\r\n      case \"stroke\":\r\n        strokestart(e);\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  const stroke = e => {\r\n    const context = canvasRef.current.getContext('2d');\r\n    const {x,y} = currentpoint(e);\r\n    context.beginPath();\r\n    context.moveTo(prevPos.current.x,prevPos.current.y);\r\n    context.lineTo(x,y);\r\n    prevPos.current = {x,y};\r\n    context.stroke();\r\n    addpoint(x,y,true);\r\n  }\r\n\r\n  const mousemove = e=>{\r\n    if(isDrawing.current && drawMode.current != \"segment\"){\r\n      stroke(e);\r\n    }\r\n  }\r\n\r\n  const stopdrawing = e => {\r\n    isDrawing.current = false;\r\n  }\r\n\r\n  const reset = ()=>{\r\n    resetpath();\r\n    const context = canvasRef.current.getContext('2d');\r\n    context.resetTransform();\r\n    context.clearRect(0,0,width,height);\r\n    context.translate(origin.x,origin.y);\r\n    prevPos.current = null;\r\n  }\r\n\r\n  const ChangeStokeStyle = str =>{\r\n    drawMode.current = str;\r\n    if (str == \"segment\"){\r\n      prevPos.current = null;\r\n    }\r\n  }\r\n\r\n  const imageChange = e =>{\r\n    if (e.target.files&&e.target.files[0]){\r\n      let FR = new FileReader();\r\n      FR.onload = e=>{\r\n        let img = new Image();\r\n        img.onload = ()=>{\r\n          setImage(img);\r\n        }\r\n        img.src = e.target.result;\r\n      }\r\n      FR.readAsDataURL(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <canvas \r\n        ref={canvasRef} className={props.className} style={hideStyle} \r\n        width={width} height = {height}\r\n        onMouseDown = {mousedown} \r\n        onMouseMove = {mousemove} \r\n        onMouseUp = {stopdrawing} \r\n        onMouseLeave = {stopdrawing}/>\r\n      <ImageCanvas \r\n        width = {width} \r\n        height={height} \r\n        style={{\r\n          zIndex:hide? 2 : (editImage? 11:9),\r\n          cursor: (!hide && editImage)? 'grab' : ''}}\r\n        zIndex={hide? 2 : (editImage? 11:9)}\r\n        scale={imageScale*0.01}\r\n        image={image}\r\n        hideImage={hideImage}/>\r\n      \r\n      <DraggableContainer zIndex={20}>\r\n        <div style={{display:'flex',flexDirection:'column'}}>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={props.toggleanimation}\r\n            style={flexitemStyle}>{hide?\"Stop\":\"Start\"} Animation</Button>  \r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={reset} \r\n            style={{...hideStyle,...flexitemStyle}}>Clear</Button> \r\n        </div>\r\n\r\n        <div style={{display:hide? 'none':''}}>\r\n          <ImageCanvasMenu\r\n            switchvalue={editImage}\r\n            onswitch={()=> setEditImage(!editImage)}\r\n            hideImage={hideImage}\r\n            toggleHideImage={()=>setHideImage(!hideImage)}\r\n            scale={imageScale}\r\n            scaleChange={(e,val)=>setImageScale(val)}\r\n            imageChange={imageChange}\r\n            />\r\n          <StrokeStyleMenu \r\n            defaultvalue = {drawMode}\r\n            values={[\"stroke\",\"tracing\",\"segment\"]}\r\n            onChange={e=> ChangeStokeStyle(e.target.value)}/>\r\n        </div>\r\n      </DraggableContainer>\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\n","import React,{useRef, useEffect,useState} from 'react'\r\n\r\nexport default function Epicycle(props) {\r\n  const {path = [],animate=false,width,height} = props;\r\n  const [Idx, setIdx] = useState(0);\r\n\r\n  const epicycleRef = useRef(null);\r\n  const traceRef = useRef(null);\r\n  const origin = {x:width/2,y:height/2};\r\n  const DFT = useRef([]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    [epicycleRef,traceRef].forEach(item=>{\r\n      const canvas = item.current;\r\n      canvas.className = props.className;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      const context = canvas.getContext('2d');\r\n      context.resetTransform();\r\n      context.translate(origin.x,origin.y);\r\n      context.clearRect(-origin.x,-origin.y,width,height);\r\n    })\r\n  }, [width,height])\r\n\r\n  useEffect(()=>{\r\n    const context = epicycleRef.current.getContext('2d');\r\n    context.clearRect(-origin.x,-origin.y,width,height);\r\n    DFTcompute();\r\n    setIdx(0);\r\n  },[path])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n      if (animate&&path.length > 0) {\r\n        interval = setInterval(() => {\r\n          draw();\r\n          trace();\r\n          setIdx(Idx => Idx + 1);\r\n        }, Math.min(10000/path.length,50));\r\n      } else {\r\n        clearInterval(interval);\r\n        epicycleRef.current.getContext('2d').clearRect(-origin.x,-origin.y,width,height);\r\n        traceRef.current.getContext('2d').clearRect(-origin.x,-origin.y,width,height);\r\n      }\r\n      return () => clearInterval(interval);\r\n    },[animate,Idx]);\r\n\r\n  const trace = () => {\r\n    const context = traceRef.current.getContext('2d');\r\n    let len = path.length;\r\n    if (len > 1){\r\n      let idx = Idx % len;\r\n      switch(idx > 0){\r\n        case false:\r\n          context.clearRect(-origin.x,-origin.y,width,height);\r\n          break;\r\n        case true:\r\n          let previdx = path[idx].connected? (idx-1)%len : idx\r\n          context.beginPath();\r\n          context.moveTo(path[previdx].x,path[previdx].y);\r\n          context.lineTo(path[idx].x,path[idx].y);\r\n          context.stroke();\r\n          break;\r\n        default:\r\n      }\r\n    } \r\n  }\r\n  \r\n\r\n  const draw = ()=>{\r\n    const context = epicycleRef.current.getContext('2d');\r\n    context.clearRect(-origin.x,-origin.y,width,height);\r\n    context.strokeStyle = '#669999';\r\n    let sequence = DFT.current;\r\n    let len = sequence.length;\r\n    if (len > 1){\r\n      let a = 0;\r\n      let b = 0;\r\n      let {x,y} = path[Idx%len];\r\n      for (var i = 0; i < len; i++){\r\n        let norm = sequence[i].norm/len;\r\n        let angle = sequence[i].angle;\r\n        let speed = sequence[i].speed;\r\n\r\n        context.beginPath();\r\n        context.arc(a,b,norm,0,2*Math.PI);\r\n        context.stroke();\r\n\r\n        context.beginPath();\r\n        context.moveTo(a, b);\r\n        let phase = (2*Math.PI*Idx*speed)/len\r\n        a += norm*Math.cos(angle + phase);\r\n        b += norm*Math.sin(angle + phase);\r\n        context.lineTo(a,b);\r\n        context.stroke();\r\n        if (Math.hypot(x-a,y-b) < 5 && i > 30){break;}\r\n      }\r\n      context.beginPath();\r\n      context.moveTo(a,b);\r\n      context.lineTo(x,y);\r\n      context.stroke();\r\n    }\r\n  }\r\n  const DFTcompute = ()=>{\r\n    let sequence = [];\r\n    let len = path.length;\r\n    for (let k = 0; k<len;k++) {\r\n      let re = 0;\r\n      let im = 0;\r\n      for (let n = 0; n<len;n++){\r\n        const phi = (Math.PI*2*k*n)/len;\r\n          re += path[n].x * Math.cos(phi);\r\n          im -= path[n].x * Math.sin(phi);\r\n\r\n          im += path[n].y * Math.cos(phi);\r\n          re += path[n].y * Math.sin(phi);\r\n      }\r\n      let size = Math.sqrt(re*re+im*im);\r\n      let args = Math.atan2(im,re);\r\n      sequence.push({norm:size,angle:args,speed:k})\r\n    }\r\n    sequence.sort((a,b)=> b.norm - a.norm)\r\n    DFT.current = sequence;\r\n  }\r\n\r\n  return (<>\r\n    <canvas ref = {epicycleRef} style={{zIndex:5}}/>\r\n    <canvas ref = {traceRef} style={{zIndex:5}}/>\r\n  </>)\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n","import React,{useRef,useState,useEffect} from 'react';\r\nimport DrawingPad from './DrawingPad';\r\nimport Epicycle from './Epicycle'\r\nimport './App.css';\r\n\r\nfunction useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useEffect(() => {\r\n    function updateSize() {\r\n        setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;}\r\n\r\nexport default function App() {\r\n    const path = useRef([]);\r\n    const pathChanged = useRef(false);\r\n    const [animate, setAnimate] = useState(false);\r\n    const [width,height] = useWindowSize();\r\n\r\n    useEffect(()=>{\r\n        setAnimate(false)\r\n    },[width,height])\r\n    \r\n    const pathAddpoint = (x,y,connected = true)=>{\r\n        pathChanged.current = true;\r\n        path.current.push({x,y,connected});\r\n    }\r\n\r\n    const resetPath = ()=>{\r\n        pathChanged.current = true;\r\n        path.current=[];\r\n    }\r\n    \r\n    const toggleAnimation = ()=> {\r\n        if(pathChanged.current){\r\n            pathChanged.current = true;\r\n            const newpath = path.current.slice();\r\n            path.current = newpath;\r\n        }\r\n        setAnimate(!animate)\r\n    }\r\n\r\n    return (<>  \r\n                <DrawingPad className=\"top center absolute\" width={width} height={height} \r\n                    addpoint={pathAddpoint} \r\n                    resetpath={resetPath}\r\n                    toggleanimation = {toggleAnimation}\r\n                    hide={animate}/>  \r\n                <Epicycle className=\"center absolute\" width={width} height={height}\r\n                    animate={animate} \r\n                    path={path.current}/>        \r\n            </>\r\n    )\r\n}\r\n\r\n"],"sourceRoot":""}